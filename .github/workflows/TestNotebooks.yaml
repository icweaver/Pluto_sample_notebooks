name: Test Pluto notebooks
on:
    push:
        branches:
            - main
            - master
    workflow_dispatch:

jobs:
    build-and-deploy:
        name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
        runs-on: ${{ matrix.os }}
        strategy:
          fail-fast: false
          matrix:
            version:
              - '1.6'
              - '1'
              - 'nightly'
            os:
              - ubuntu-latest
              - macOS-latest
              - windows-latest
            arch:
              - x64
        steps:
            - name: Checkout
              uses: actions/checkout@v2


            - name: Install Julia
              uses: julia-actions/setup-julia@v1
              with:
                  version: 1.7


            # We set up a folder that Pluto can use to cache exported notebooks. If the notebook file did not change, then Pluto can take the exported file from cache instead of running the notebook.
            - name: Set up notebook state cache
              uses: actions/cache@v2
              with:
                  path: pluto_state_cache
                  key: ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('**/Project.toml', '**/Manifest.toml', '.github/workflows/*' ) }}-${{ hashFiles('**/*jl') }}
                  restore-keys: |
                      ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('**/Project.toml', '**/Manifest.toml', '.github/workflows/*' ) }}


            - name: Run Pluto notebooks
              run: |
                julia -e 'using Pkg
                  Pkg.activate(mktempdir())
                  Pkg.add([
                    Pkg.PackageSpec(name="PlutoSliderServer", version="0.3.2-0.3"),
                  ])

                  import PlutoSliderServer

                  PlutoSliderServer.run_directory()
                  '
